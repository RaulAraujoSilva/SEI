services:
  # Backend API - SEI-Com AI
  - type: web
    name: sei-com-ai-backend
    env: python
    plan: free
    buildCommand: "pip install -r backend/requirements.txt"
    startCommand: "cd backend && uvicorn app.main:app --host 0.0.0.0 --port $PORT"
    healthCheckPath: /health
    envVars:
      - key: ENVIRONMENT
        value: production
      # Database - will fallback to SQLite if PostgreSQL not available
      - key: DATABASE_URL
        value: sqlite:///./sei_scraper.db
      - key: DEBUG
        value: "false"
      - key: CORS_ORIGINS
        value: "https://sei-jxdn.onrender.com,https://sei-com-ai-frontend.onrender.com"
      # OpenAI Configuration - MUST BE SET MANUALLY IN RENDER DASHBOARD
      # OPENAI_API_KEY (set manually)
      # OPENAI_ORGANIZATION_ID (set manually)
      - key: DEFAULT_LLM_PROVIDER
        value: openai
      - key: DEFAULT_LLM_MODEL
        value: gpt-4.1-mini-2025-04-14
      - key: LLM_MAX_TOKENS
        value: "4000"
      - key: LLM_TEMPERATURE
        value: "0.1"
      - key: LLM_TIMEOUT
        value: "60"

  # Frontend React App (if needed)
  # - type: web
  #   name: sei-com-ai-frontend
  #   env: static
  #   plan: free
  #   buildCommand: "cd frontend && npm install && npm run build"
  #   staticPublishPath: frontend/build
  #   routes:
  #     - type: rewrite
  #       source: /*
  #       destination: /index.html

# PostgreSQL Database (optional - will use SQLite fallback)
# databases:
#   - name: sei-com-ai-db
#     databaseName: sei_scraper
#     user: sei_user
#     plan: free

  # Redis Cache
  - name: sei-com-ai-redis
    plan: free 